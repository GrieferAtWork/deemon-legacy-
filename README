
====================================
 === Compilation / Installation ===
====================================

Extract all files to a temporary path '/path/to/deemon_root'

=== Linux ===

	# >> Installing
	# WARNING: Deemon is designed to live in '/usr/bin/deemon' and '/usr/lib/',
	#          just as linux intended for programs like it to be.
	#          If you aren't a fan of something like that, or simply
	#          don't want to run some random shell-script with sudo-privileges,
	#          look at the 'Make without installing/sudo rights' or
	#          'Create a portable executable' section below.
	# NOTE:    Sudo privileges are required to add files to '/usr/bin' and '/usr/lib'
	#          If your machine is designed to grant access to those folders without
	#          the need for sudo permissions, you can run ./make.sh install without sudo.
	$ sudo ./make.sh install
	$ deemon --version

	# >> Requirements
	$ sudo apt-get install gcc
	[optional] $ 'sudo apt-get install libbluetooth-dev' # Required for bluetooth sockets
	[optional] $ 'sudo apt-get install libncurses5-dev' # Required for the '_curses' and '_debugger' dex
	
	# >> Automatic uninstall
	# NOTE: Used to uninstall deemon from the host system (removes everything put there by './make.sh install')
	$ sudo ./make.sh purge

	# >> Make without installing/sudo rights
	# NOTE: To invoke deemon after this finishes, you must use
	#       './make.sh run $*', where $* are the arguments
	#       passed to the deemon commandline.
	$ ./make.sh make
	$ ./make.sh run --version

	# >> Create a portable executable
	# NOTE: One huge, executable binary, combining the front-end and library into one file.
	#       The generated binary can be used portably and search paths for include and dex
	#       files always include '$(dirname $(readlink /proc/self/exe))/lib' as root folder.
	#       So any static version can be used portably if the executable's directory
	#       contains the lib folder.
	# NOTE: Only the 'lib/dex', 'lib/dex.<api_version>' and 'lib/include' folders are required
	#       +
	#       |-- deemon
	#       |
	#       |-- lib +
	#       |       |
	#       |       |-- include +
	#       |       |           |
	#       |       |           | -- ...
	#       |       |
	#       |       |-- dex --- +
	#       |       |           |
	#       |       |           | -- ...
	#       |       |
	#       |       |-- ...
	#       |
	#       |-- ...
	# NOTE: This same directory layout is also used under windows
	$ ./make.sh --static make
	$ ./deemon.<compiler_version>.<api_version> --version


	# >> Paths
	# NOTE: Assuming './make.sh install' was executed
	$ which deemon
	>> /usr/bin/deemon # By default
	Starting with v101, deemon uses update-alternatives to manage its versions,
	meaning that parallel installations of future releases can be easily managed.
    
	Troubleshoothing:
		Since my main machine is running windows, you'll probably run into
		permission problems, where compiler scripts aren't executable.
		So make sure that 'make.sh' has execute permission:
		$ chmod +x make.sh
		$ ./make.sh --version
		Or just run it with bash immediatly
		$ bash make.sh --version

=== Windows ===
	Visual Studio:
	>> Open ".vs/_project.sln" in visual studio
	>> Hit compile (CTRL+SHIFT+B or whatever; you know what I mean...)
	NOTE: If you get an error that the platform toolset wasn't found,
	      go to the project settings --> General --> Platform Toolset
	      There you have to select the toolset you're using.
	      Which should be 'v100' or 'v120'
	>> Copy 'deemon.exe', 'libdeemon.dll' and the 'lib' folder.
	   If you want debug information, copy '*.pdb' as well.
	Requirements:
	>> Visual Studio (tested: 2013 | should work: 2010)

=== MacOS ===
	Dunno, don't have one (try the linux way; if that's a no-go, send me the logs...)

=== Notes ===
	Tested (and working) under:
	  - Windows 8.1 (x64)
	  - Ubuntu 12.04.5 (i386|amd64)
	  - Ubuntu 15.10 (amd64)
	  - Kubuntu 16.04 (i386|amd64)
	(Intended) Minimum System Requirements:
	  - Windows: XP or greater
	  - Linux: ~Should~ work on any system
