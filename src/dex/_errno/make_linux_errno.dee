#!/usr/bin/deemon
const copyright = "\
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */
";

#include <file>
#include <fs>

list all_names = {
	{ "E2BIG", },
	{ "EACCES", },
	{ "EADDRINUSE", },
	{ "EADDRNOTAVAIL", },
	{ "EADV", },
	{ "EAFNOSUPPORT", },
	{ "EAGAIN", "EWOULDBLOCK", },
	{ "EALREADY", },
	{ "EBADE", },
	{ "EBADF", },
	{ "EBADFD", },
	{ "EBADMSG", },
	{ "EBADR", },
	{ "EBADRQC", },
	{ "EBADSLT", },
	{ "EBFONT", },
	{ "EBUSY", },
	{ "ECANCELED", },
	{ "ECHILD", },
	{ "ECHRNG", },
	{ "ECOMM", },
	{ "ECONNABORTED", },
	{ "ECONNREFUSED", },
	{ "ECONNRESET", },
	{ "EDEADLK", "EDEADLOCK", },
	{ "EDESTADDRREQ", },
	{ "EDOM", },
	{ "EDOTDOT", },
	{ "EDQUOT", },
	{ "EEXIST", },
	{ "EFAULT", },
	{ "EFBIG", },
	{ "EHOSTDOWN", },
	{ "EHOSTUNREACH", },
	{ "EIDRM", },
	{ "EILSEQ", },
	{ "EINPROGRESS", },
	{ "EINTR", },
	{ "EINVAL", },
	{ "EIO", },
	{ "EISCONN", },
	{ "EISDIR", },
	{ "EISNAM", },
	{ "EKEYEXPIRED", },
	{ "EKEYREJECTED", },
	{ "EKEYREVOKED", },
	{ "EL2HLT", },
	{ "EL2NSYNC", },
	{ "EL3HLT", },
	{ "EL3RST", },
	{ "ELIBACC", },
	{ "ELIBBAD", },
	{ "ELIBEXEC", },
	{ "ELIBMAX", },
	{ "ELIBSCN", },
	{ "ELNRNG", },
	{ "ELOOP", },
	{ "EMEDIUMTYPE", },
	{ "EMFILE", },
	{ "EMLINK", },
	{ "EMSGSIZE", },
	{ "EMULTIHOP", },
	{ "ENAMETOOLONG", },
	{ "ENAVAIL", },
	{ "ENETDOWN", },
	{ "ENETRESET", },
	{ "ENETUNREACH", },
	{ "ENFILE", },
	{ "ENOANO", },
	{ "ENOBUFS", },
	{ "ENOCSI", },
	{ "ENODATA", },
	{ "ENODEV", },
	{ "ENOENT", },
	{ "ENOEXEC", },
	{ "ENOKEY", },
	{ "ENOLCK", },
	{ "ENOLINK", },
	{ "ENOMEDIUM", },
	{ "ENOMEM", },
	{ "ENOMSG", },
	{ "ENONET", },
	{ "ENOPKG", },
	{ "ENOPROTOOPT", },
	{ "ENOSPC", },
	{ "ENOSR", },
	{ "ENOSTR", },
	{ "ENOSYS", },
	{ "ENOTBLK", },
	{ "ENOTCONN", },
	{ "ENOTDIR", },
	{ "ENOTEMPTY", },
	{ "ENOTNAM", },
	{ "ENOTRECOVERABLE", },
	{ "ENOTSOCK", },
	{ "ENOTSUP", "EOPNOTSUPP", },
	{ "ENOTTY", },
	{ "ENOTUNIQ", },
	{ "ENXIO", },
	{ "EOTHER", },
	{ "EOVERFLOW", },
	{ "EOWNERDEAD", },
	{ "EPERM", },
	{ "EPFNOSUPPORT", },
	{ "EPIPE", },
	{ "EPROTO", },
	{ "EPROTONOSUPPORT", },
	{ "EPROTOTYPE", },
	{ "ERANGE", },
	{ "EREMCHG", },
	{ "EREMOTE", },
	{ "EREMOTEIO", },
	{ "ERESTART", },
	{ "EROFS", },
	{ "ESHUTDOWN", },
	{ "ESOCKTNOSUPPORT", },
	{ "ESPIPE", },
	{ "ESRCH", },
	{ "ESRMNT", },
	{ "ESTALE", },
	{ "ESTRPIPE", },
	{ "ETIME", },
	{ "ETIMEDOUT", },
	{ "ETOOMANYREFS", },
	{ "ETXTBSY", },
	{ "EUCLEAN", },
	{ "EUNATCH", },
	{ "EUSERS", },
	{ "EXDEV", },
	{ "EXFULL", },
	{ "STRUNCATE", },
};


function put_names(out) {
	print out: copyright;
	for (local names: all_names.sorted()) {
		local found_aliases = [];
		for (local name: names) {
			if (found_aliases) {
				print out: "#if defined("+name+")",;
				for (local a: found_aliases) {
					print out: " && (!defined("+a+") || ("+a+" != "+name+"))",;
				}
				print out: "";
			} else print out: "#ifdef",name;
			found_aliases.append(name);
			print out: "LINUX_ERROR("+name+")";
			print out: "#endif";
		}
	}
}

fs::chdir(fs::path::head(__FILE__));
put_names(file.io("linux_errors.inl","w"));




