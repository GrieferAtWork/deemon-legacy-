/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */
/* Autogenerated file (do not edit) */

// Slot: tp_call
static DeeObject * _deeinstance_tp_call(DeeInstanceObject *self, DeeObject *args) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_object.ctp_call),"Missing slot: tp_call");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_object.ctp_call,(DeeObject *)self,args);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_call)),(DeeObject *)self,args);
#endif
}

// Slot: tp_not
static DeeObject * _deeinstance_tp_not(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_not),"Missing slot: tp_not");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_not,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_not)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}

// Slot: tp_bool
static int _deeinstance_tp_bool(DeeInstanceObject *self) {
 DeeObject *temp; int result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_bool),"Missing slot: tp_bool");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((temp = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_bool,(DeeObject *)self,Dee_EmptyTuple)) == NULL) return -1;
 result = DeeObject_Bool(temp);
 Dee_DECREF(temp);
 return result;
#else
 if ((temp = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_bool)),(DeeObject *)self,Dee_EmptyTuple)) == NULL) return -1;
 result = DeeObject_Bool(temp);
 Dee_DECREF(temp);
 return result;
#endif
}

// Slot: tp_inv
static DeeObject * _deeinstance_tp_inv(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_inv),"Missing slot: tp_inv");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_inv,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_inv)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}

// Slot: tp_pos
static DeeObject * _deeinstance_tp_pos(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_pos),"Missing slot: tp_pos");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_pos,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_pos)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}

// Slot: tp_neg
static DeeObject * _deeinstance_tp_neg(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_neg),"Missing slot: tp_neg");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_neg,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_neg)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}

// Slot: tp_inc
static DeeObject * _deeinstance_tp_inc(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_inc),"Missing slot: tp_inc");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_inc,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_inc)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}

// Slot: tp_incpost
static DeeObject * _deeinstance_tp_incpost(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_incpost),"Missing slot: tp_incpost");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_incpost,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_incpost)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}

// Slot: tp_dec
static DeeObject * _deeinstance_tp_dec(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_dec),"Missing slot: tp_dec");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_dec,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_dec)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}

// Slot: tp_decpost
static DeeObject * _deeinstance_tp_decpost(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_decpost),"Missing slot: tp_decpost");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_decpost,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_decpost)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}

// Slot: tp_add
static DeeObject * _deeinstance_tp_add(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_add),"Missing slot: tp_add");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_add,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_add)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_iadd
static DeeObject * _deeinstance_tp_iadd(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_iadd),"Missing slot: tp_iadd");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_iadd,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_iadd)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_sub
static DeeObject * _deeinstance_tp_sub(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_sub),"Missing slot: tp_sub");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_sub,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_sub)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_isub
static DeeObject * _deeinstance_tp_isub(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_isub),"Missing slot: tp_isub");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_isub,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_isub)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_mul
static DeeObject * _deeinstance_tp_mul(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_mul),"Missing slot: tp_mul");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_mul,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_mul)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_imul
static DeeObject * _deeinstance_tp_imul(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_imul),"Missing slot: tp_imul");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_imul,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_imul)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_div
static DeeObject * _deeinstance_tp_div(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_div),"Missing slot: tp_div");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_div,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_div)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_idiv
static DeeObject * _deeinstance_tp_idiv(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_idiv),"Missing slot: tp_idiv");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_idiv,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_idiv)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_mod
static DeeObject * _deeinstance_tp_mod(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_mod),"Missing slot: tp_mod");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_mod,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_mod)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_imod
static DeeObject * _deeinstance_tp_imod(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_imod),"Missing slot: tp_imod");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_imod,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_imod)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_shl
static DeeObject * _deeinstance_tp_shl(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_shl),"Missing slot: tp_shl");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_shl,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_shl)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_ishl
static DeeObject * _deeinstance_tp_ishl(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ishl),"Missing slot: tp_ishl");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ishl,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_ishl)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_shr
static DeeObject * _deeinstance_tp_shr(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_shr),"Missing slot: tp_shr");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_shr,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_shr)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_ishr
static DeeObject * _deeinstance_tp_ishr(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ishr),"Missing slot: tp_ishr");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ishr,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_ishr)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_and
static DeeObject * _deeinstance_tp_and(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_and),"Missing slot: tp_and");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_and,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_and)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_iand
static DeeObject * _deeinstance_tp_iand(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_iand),"Missing slot: tp_iand");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_iand,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_iand)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_or
static DeeObject * _deeinstance_tp_or(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_or),"Missing slot: tp_or");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_or,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_or)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_ior
static DeeObject * _deeinstance_tp_ior(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ior),"Missing slot: tp_ior");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ior,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_ior)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_xor
static DeeObject * _deeinstance_tp_xor(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_xor),"Missing slot: tp_xor");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_xor,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_xor)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_ixor
static DeeObject * _deeinstance_tp_ixor(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ixor),"Missing slot: tp_ixor");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ixor,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_ixor)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_pow
static DeeObject * _deeinstance_tp_pow(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_pow),"Missing slot: tp_pow");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_pow,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_pow)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_ipow
static DeeObject * _deeinstance_tp_ipow(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ipow),"Missing slot: tp_ipow");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_math.ctp_ipow,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_ipow)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_cmp_lo
static DeeObject * _deeinstance_tp_cmp_lo(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_lo),"Missing slot: tp_cmp_lo");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_lo,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_cmp_lo)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_cmp_le
static DeeObject * _deeinstance_tp_cmp_le(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_le),"Missing slot: tp_cmp_le");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_le,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_cmp_le)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_cmp_eq
static DeeObject * _deeinstance_tp_cmp_eq(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_eq),"Missing slot: tp_cmp_eq");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_eq,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_cmp_eq)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_cmp_ne
static DeeObject * _deeinstance_tp_cmp_ne(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_ne),"Missing slot: tp_cmp_ne");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_ne,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_cmp_ne)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_cmp_gr
static DeeObject * _deeinstance_tp_cmp_gr(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_gr),"Missing slot: tp_cmp_gr");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_gr,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_cmp_gr)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_cmp_ge
static DeeObject * _deeinstance_tp_cmp_ge(DeeInstanceObject *self, DeeObject *right) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_ge),"Missing slot: tp_cmp_ge");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_compare.ctp_cmp_ge,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,right)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_cmp_ge)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_seq_get
static DeeObject * _deeinstance_tp_seq_get(DeeInstanceObject *self, DeeObject *i) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_get),"Missing slot: tp_seq_get");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,i)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_get,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,i)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_seq_get)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_seq_del
static int _deeinstance_tp_seq_del(DeeInstanceObject *self, DeeObject *i) {
 DeeObject *args,*temp; int result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_del),"Missing slot: tp_seq_del");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,i)) == NULL) return -1;
 temp = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_del,(DeeObject *)self,args);
 Dee_DECREF(args);
 if (!temp) return -1;
 result = temp != NULL;
 Dee_DECREF(temp);
 return result;
#else
 if ((args = DeeTuple_Pack(1,i)) == NULL) return -1;
 temp = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_seq_del)),(DeeObject *)self,args);
 Dee_DECREF(args);
 if (!temp) return -1;
 result = temp != NULL;
 Dee_DECREF(temp);
 return result;
#endif
}

// Slot: tp_seq_set
static int _deeinstance_tp_seq_set(DeeInstanceObject *self, DeeObject *i, DeeObject *v) {
 DeeObject *args,*temp; int result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_set),"Missing slot: tp_seq_set");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(2,i,v)) == NULL) return -1;
 temp = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_set,(DeeObject *)self,args);
 Dee_DECREF(args);
 if (!temp) return -1;
 result = temp != NULL;
 Dee_DECREF(temp);
 return result;
#else
 if ((args = DeeTuple_Pack(2,i,v)) == NULL) return -1;
 temp = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_seq_set)),(DeeObject *)self,args);
 Dee_DECREF(args);
 if (!temp) return -1;
 result = temp != NULL;
 Dee_DECREF(temp);
 return result;
#endif
}

// Slot: tp_seq_size
static DeeObject * _deeinstance_tp_seq_size(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_size),"Missing slot: tp_seq_size");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_size,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_seq_size)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}

// Slot: tp_seq_contains
static DeeObject * _deeinstance_tp_seq_contains(DeeInstanceObject *self, DeeObject *elem) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_contains),"Missing slot: tp_seq_contains");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(1,elem)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_contains,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(1,elem)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_seq_contains)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_seq_range_get
static DeeObject * _deeinstance_tp_seq_range_get(DeeInstanceObject *self, DeeObject *lo, DeeObject *hi) {
 DeeObject *args,*result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_range_get),"Missing slot: tp_seq_range_get");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(2,lo?lo:Dee_None,hi?hi:Dee_None)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_range_get,(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#else
 if ((args = DeeTuple_Pack(2,lo?lo:Dee_None,hi?hi:Dee_None)) == NULL) return NULL;
 result = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_seq_range_get)),(DeeObject *)self,args);
 Dee_DECREF(args);
 return result;
#endif
}

// Slot: tp_seq_range_del
static int _deeinstance_tp_seq_range_del(DeeInstanceObject *self, DeeObject *lo, DeeObject *hi) {
 DeeObject *args,*temp; int result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_range_del),"Missing slot: tp_seq_range_del");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(2,lo?lo:Dee_None,hi?hi:Dee_None)) == NULL) return -1;
 temp = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_range_del,(DeeObject *)self,args);
 Dee_DECREF(args);
 if (!temp) return -1;
 result = temp != NULL;
 Dee_DECREF(temp);
 return result;
#else
 if ((args = DeeTuple_Pack(2,lo?lo:Dee_None,hi?hi:Dee_None)) == NULL) return -1;
 temp = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_seq_range_del)),(DeeObject *)self,args);
 Dee_DECREF(args);
 if (!temp) return -1;
 result = temp != NULL;
 Dee_DECREF(temp);
 return result;
#endif
}

// Slot: tp_seq_range_set
static int _deeinstance_tp_seq_range_set(DeeInstanceObject *self, DeeObject *lo, DeeObject *hi, DeeObject *v) {
 DeeObject *args,*temp; int result;
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_range_set),"Missing slot: tp_seq_range_set");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 if ((args = DeeTuple_Pack(3,lo?lo:Dee_None,hi?hi:Dee_None,v)) == NULL) return -1;
 temp = DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_range_set,(DeeObject *)self,args);
 Dee_DECREF(args);
 if (!temp) return -1;
 result = temp != NULL;
 Dee_DECREF(temp);
 return result;
#else
 if ((args = DeeTuple_Pack(3,lo?lo:Dee_None,hi?hi:Dee_None,v)) == NULL) return -1;
 temp = DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_seq_range_set)),(DeeObject *)self,args);
 Dee_DECREF(args);
 if (!temp) return -1;
 result = temp != NULL;
 Dee_DECREF(temp);
 return result;
#endif
}

// Slot: tp_seq_iter_self
static DeeObject * _deeinstance_tp_seq_iter_self(DeeInstanceObject *self) {
 DEE_ASSERT(DeeObject_Check(self) && DeeInstance_Check(self));
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 DEE_ASSERTF(DeeObject_Check(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_iter_self),"Missing slot: tp_seq_iter_self");
#endif
#if DEE_CONFIG_RUNTIME_HAVE_CLASS_STATIC_VTABLE
 return DeeObject_ThisCall(DeeClass_SUFFIX(Dee_TYPE(self))->cs_seq.ctp_seq_iter_self,(DeeObject *)self,Dee_EmptyTuple);
#else
 return DeeObject_ThisCall(DeeClassSuffix_GetKnownVirtOperator(DeeClass_SUFFIX(Dee_TYPE(self)),DeeType_SLOT_ID(tp_seq_iter_self)),(DeeObject *)self,Dee_EmptyTuple);
#endif
}
