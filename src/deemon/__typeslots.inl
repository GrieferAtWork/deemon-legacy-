/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */
/* Autogenerated file (do not edit) */

/* For: DeeTypeObject */
#ifndef S
#error Must #define S(name) to iterator slots
#endif

S(tp_name)
S(tp_doc)
S(tp_flags)
S(tp_base)
S(tp_instance_size)
S(tp_alloc)
S(tp_free)
S(tp_ctor)
S(tp_copy_ctor)
S(tp_move_ctor)
S(tp_any_ctor)
S(tp_new)
S(tp_copy_new)
S(tp_move_new)
S(tp_any_new)
S(tp_dtor)
S(tp_copy_assign)
S(tp_move_assign)
S(tp_any_assign)
S(tp_str)
S(tp_repr)
S(tp_int32)
S(tp_int64)
S(tp_double)
S(tp_call)
S(tp_visit)
S(tp_clear)
S(tp_not)
S(tp_bool)
S(tp_inv)
S(tp_pos)
S(tp_neg)
S(tp_inc)
S(tp_incpost)
S(tp_dec)
S(tp_decpost)
S(tp_add)
S(tp_iadd)
S(tp_sub)
S(tp_isub)
S(tp_mul)
S(tp_imul)
S(tp_div)
S(tp_idiv)
S(tp_mod)
S(tp_imod)
S(tp_shl)
S(tp_ishl)
S(tp_shr)
S(tp_ishr)
S(tp_and)
S(tp_iand)
S(tp_or)
S(tp_ior)
S(tp_xor)
S(tp_ixor)
S(tp_pow)
S(tp_ipow)
S(tp_hash)
S(tp_cmp_lo)
S(tp_cmp_le)
S(tp_cmp_eq)
S(tp_cmp_ne)
S(tp_cmp_gr)
S(tp_cmp_ge)
S(tp_seq_get)
S(tp_seq_del)
S(tp_seq_set)
S(tp_seq_size)
S(tp_seq_contains)
S(tp_seq_range_get)
S(tp_seq_range_del)
S(tp_seq_range_set)
S(tp_seq_iter_self)
S(tp_seq_iter_next)
S(tp_attr_get)
S(tp_attr_del)
S(tp_attr_set)
S(tp_members)
S(tp_getsets)
S(tp_methods)
S(tp_class_members)
S(tp_class_getsets)
S(tp_class_methods)
S(tp_marshal)

/* For: DeeStructuredTypeObject */
S(tp_p_instance_size)
S(tp_p_any_ctor)
S(tp_p_any_assign)
S(tp_p_str)
S(tp_p_repr)
S(tp_p_int32)
S(tp_p_int64)
S(tp_p_double)
S(tp_p_call)
S(tp_p_not)
S(tp_p_bool)
S(tp_p_inv)
S(tp_p_pos)
S(tp_p_neg)
S(tp_p_inc)
S(tp_p_incpost)
S(tp_p_dec)
S(tp_p_decpost)
S(tp_p_add)
S(tp_p_iadd)
S(tp_p_sub)
S(tp_p_isub)
S(tp_p_mul)
S(tp_p_imul)
S(tp_p_div)
S(tp_p_idiv)
S(tp_p_mod)
S(tp_p_imod)
S(tp_p_shl)
S(tp_p_ishl)
S(tp_p_shr)
S(tp_p_ishr)
S(tp_p_and)
S(tp_p_iand)
S(tp_p_or)
S(tp_p_ior)
S(tp_p_xor)
S(tp_p_ixor)
S(tp_p_pow)
S(tp_p_ipow)
S(tp_p_hash)
S(tp_p_cmp_lo)
S(tp_p_cmp_le)
S(tp_p_cmp_eq)
S(tp_p_cmp_ne)
S(tp_p_cmp_gr)
S(tp_p_cmp_ge)
S(tp_p_seq_get)
S(tp_p_seq_del)
S(tp_p_seq_set)
S(tp_p_seq_size)
S(tp_p_seq_contains)
S(tp_p_seq_range_get)
S(tp_p_seq_range_del)
S(tp_p_seq_range_set)
S(tp_p_seq_iter_self)
S(tp_p_attr_get)
S(tp_p_attr_del)
S(tp_p_attr_set)

#if DEE_CONFIG_RUNTIME_HAVE_POINTERS

/* For: DeePointerTypeObject */
S(tp_ptr_elem_size)
S(tp_ptr_pointer_base)

/* For: DeeLValueTypeObject */
S(tp_lval_lvalue_base)
#endif /* DEE_CONFIG_RUNTIME_HAVE_POINTERS */

/* For: DeeFileTypeObject */
S(tp_io_read)
S(tp_io_write)
S(tp_io_seek)
S(tp_io_flush)
S(tp_io_trunc)
S(tp_io_close)
S(tp_io_readat)
S(tp_io_writeat)
