const copyright = "\
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the \"Software\"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */
";

#include <file>

function open(x): result {
	result = file.io(x,"w");
	result.write(copyright);
	print result: "/" "* Autogenerated file (do not edit) *" "/";
}

f_stx = open("../../../include/deemon/__typeslots_stx.inl");
f_ids = open("../../../include/deemon/__typeslots_ids.inl");
f_get = open("../../../include/deemon/__typeslots_get.inl");
f_def = open("../../../include/deemon/__typeslots_def.inl");
f_typ = open("../../../include/deemon/__typeslots_typ.inl");
f_slt = open("../__typeslots.inl");

function get_name(x) {
	x = x.rstrip("_");
	local i = x.rfind(".");
	return (i != -1) ? x[i+1:] : x;
}
_tyname = [""];
#define tyname  (global _tyname[0])

files = [f_ids,f_get,f_def,f_typ,f_slt]; // NOTE: doesn't contain 'f_stx'
function print_all(x) {
	for (f: files) print f: x;
}

function set_tyname(x) {
	global _tyname[0] = x;
	print_all("\n/" "* For: "+x+" *" "/");
}

set_tyname("DeeTypeObject");

ids = [];
function s(id,ty,name,def,args...) {
	local alt = #args ? args[0] : none;
	print f_ids: " DeeType_SlotID_"+get_name(name),"=",str id+",";
	print f_get: "#define _DeeType_SlotGet_"+get_name(name)+"(ob) (("+tyname+" *)ob)->"+name;
	print f_def: "#define _DeeType_SlotDefault_"+get_name(name),def;
	function tynameof(name,prefix) {
		local i = ty.find("*)");
		if (i != -1) return ty[:i+1]+prefix+get_name(name)+ty[i+1:];
		else         return ty+(ty.endswith("*") ? "" : " ")+prefix+get_name(name);
	}
	print f_typ: "typedef",tynameof(name,"_DeeType_SlotType_")+";";
	if (!(alt is none)) {
		print f_ids: " DeeType_SlotID_"+alt,"=",str id+",";
		print f_get: "#define _DeeType_SlotGet_"+alt,"_DeeType_SlotGet_"+get_name(name);
		print f_def: "#define _DeeType_SlotDefault_"+alt,def;
		print f_typ: "typedef",tynameof(alt,"_DeeType_SlotType_")+";";
		print f_stx:;
		print f_stx: " // >>",tyname,">>",tynameof(name,""),"=",def+";";
		print f_stx: " // Internal:",get_name(name);
		print f_stx: " // Deemon:  ",get_name(alt);
		print f_stx: " "+get_name(name),"=",str id+",";
		print f_stx:;
		print f_stx: " // >>",tyname,">>",tynameof(alt,""),"=",def+";";
		print f_stx: " // Internal:",get_name(name);
		print f_stx: " // Deemon:  ",get_name(alt);
		print f_stx: " "+alt,"=",str id+",";
	} else {
		print f_stx:;
		print f_stx: " // >>",tyname,">>",tynameof(name,""),"=",def+";";
		print f_stx: " // Internal:",get_name(name);
		print f_stx: " "+get_name(name),"=",str id+",";
	}
	if (!(id in global ids)) {
		global ids.append(id);
		print f_slt: "S("+get_name(name)+")";
	}
}

print f_slt: "#ifndef S";
print f_slt: "#error Must #define S(name) to iterator slots";
print f_slt: "#endif";
print f_slt: "";
print f_ids: "enum{";
print f_stx: "enum{";

s(0,"char const *","tp_name","NULL","__name__");
s(1,"char const *","tp_doc","NULL","__doc__");
s(2,"Dee_uint32_t","tp_flags","DEE_TYPE_FLAG_NONE");
s(4,"DeeTypeObject *","tp_base","&DeeObject_Type","__base__");
s(5,"Dee_size_t","tp_constructor.tp_instance_size","sizeof(DeeObject)","__instance_size__");
s(6,"DeeObject *(DEE_CALL *)(DeeTypeObject *tp)","tp_constructor.tp_alloc","&_DeeGenericFallback_tp_alloc");
s(12,"void (DEE_CALL *)(DeeTypeObject *tp, DeeObject *self)","tp_destructor.tp_free","&_DeeGenericFallback_tp_free","__free__");

s(8,"int (DEE_CALL *)(DeeTypeObject *tp, DeeObject *self)","tp_constructor.tp_ctor_","&_DeeGenericMissing_tp_ctor"/*,"__constructor__"*/);
s(9,"int (DEE_CALL *)(DeeTypeObject *tp, DeeObject *self, DeeObject *right)","tp_constructor.tp_copy_ctor_","&_DeeGenericMissing_tp_copy_ctor","__copy__");
s(10,"int (DEE_CALL *)(DeeTypeObject *tp, DeeObject *self, DeeObject *right)","tp_constructor.tp_move_ctor_","&_DeeGenericMissing_tp_move_ctor","__move__");
s(11,"int (DEE_CALL *)(DeeTypeObject *tp, DeeObject *self, DeeObject *args)","tp_constructor.tp_any_ctor_","&_DeeGenericMissing_tp_any_ctor","__constructor__");

// New/Refactored var-operators added in v101
s(82,"DeeObject *(DEE_CALL *)(DeeTypeObject *tp)","tp_constructor.tp_new_","&_DeeGenericFallback_tp_new");
s(83,"DeeObject *(DEE_CALL *)(DeeTypeObject *tp, DeeObject *self)","tp_constructor.tp_copy_new_","&_DeeGenericFallback_tp_copy_new");
s(84,"DeeObject *(DEE_CALL *)(DeeTypeObject *tp, DeeObject *self)","tp_constructor.tp_move_new_","&_DeeGenericFallback_tp_move_new");
s(7,"DeeObject *(DEE_CALL *)(DeeTypeObject *tp, DeeObject *args)","tp_constructor.tp_any_new_","&_DeeGenericFallback_tp_any_new");

s(13,"void (DEE_CALL *)(DeeObject *self)","tp_destructor.tp_dtor","NULL","__destructor__");
s(14,"int (DEE_CALL *)(DeeObject *self, DeeObject *right)","tp_assign.tp_copy_assign","NULL","__copyassign__");
s(15,"int (DEE_CALL *)(DeeObject *self, DeeObject *right)","tp_assign.tp_move_assign","NULL","__moveassign__");
s(16,"int (DEE_CALL *)(DeeObject *self, DeeObject *right)","tp_assign.tp_any_assign","NULL","__assign__");
s(17,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_cast.tp_str","NULL","__str__");
s(18,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_cast.tp_repr","NULL","__repr__");
s(19,"int (DEE_CALL *)(DeeObject *self, Dee_int32_t *result)","tp_cast.tp_int32","NULL","__int32__");
s(20,"int (DEE_CALL *)(DeeObject *self, Dee_int64_t *result)","tp_cast.tp_int64","NULL","__int64__");
s(21,"int (DEE_CALL *)(DeeObject *self, double *result)","tp_cast.tp_double","NULL","__double__");
s(22,"DeeObject *(DEE_CALL *)(DeeObject *self, DeeObject *args)","tp_object.tp_call","NULL","__call__");
s(23,"void(DEE_CALL *)(DeeTypeObject *tp_self, DeeObject *self, DeeVisitProc visit, DEE_A_IN_OPT void *closure)","tp_object.tp_visit","NULL");
s(81,"void(DEE_CALL *)(DeeObject *self)","tp_object.tp_clear","NULL");
s(24,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_math.tp_not","NULL","__not__");
s(25,"int (DEE_CALL *)(DeeObject *self)","tp_math.tp_bool","NULL","__bool__");
s(26,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_math.tp_inv","NULL","__inv__");
s(27,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_math.tp_pos","NULL","__pos__");
s(28,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_math.tp_neg","NULL","__neg__");
s(29,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_math.tp_inc","NULL","__inc__");
s(30,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_math.tp_incpost","NULL","__incpost__");
s(31,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_math.tp_dec","NULL","__dec__");
s(32,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_math.tp_decpost","NULL","__decpost__");
s(33,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_add","NULL","__add__");
s(34,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_iadd","NULL","__iadd__");
s(35,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_sub","NULL","__sub__");
s(36,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_isub","NULL","__isub__");
s(37,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_mul","NULL","__mul__");
s(38,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_imul","NULL","__imul__");
s(39,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_div","NULL","__div__");
s(40,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_idiv","NULL","__idiv__");
s(41,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_mod","NULL","__mod__");
s(42,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_imod","NULL","__imod__");
s(43,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_shl","NULL","__shl__");
s(44,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_ishl","NULL","__ishl__");
s(45,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_shr","NULL","__shr__");
s(46,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_ishr","NULL","__ishr__");
s(47,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_and","NULL","__and__");
s(48,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_iand","NULL","__iand__");
s(49,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_or","NULL","__or__");
s(50,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_ior","NULL","__ior__");
s(51,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_xor","NULL","__xor__");
s(52,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_ixor","NULL","__ixor__");
s(53,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_pow","NULL","__pow__");
s(54,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_math.tp_ipow","NULL","__ipow__");
s(55,"int (DEE_CALL *)(DeeObject *self, Dee_hash_t start, Dee_hash_t *result)","tp_math.tp_hash","NULL","__hash__");
s(56,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_compare.tp_cmp_lo","NULL","__lo__");
s(57,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_compare.tp_cmp_le","NULL","__le__");
s(58,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_compare.tp_cmp_eq","NULL","__eq__");
s(59,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_compare.tp_cmp_ne","NULL","__ne__");
s(60,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_compare.tp_cmp_gr","NULL","__gr__");
s(61,"DeeObject *(DEE_CALL *)(DeeObject *lhs, DeeObject *rhs)","tp_compare.tp_cmp_ge","NULL","__ge__");
s(62,"DeeObject *(DEE_CALL *)(DeeObject *self, DeeObject *i)","tp_seq.tp_seq_get","NULL","__getitem__");
s(63,"int (DEE_CALL *)(DeeObject *self, DeeObject *i)","tp_seq.tp_seq_del","NULL","__delitem__");
s(64,"int (DEE_CALL *)(DeeObject *self, DeeObject *i, DeeObject *v)","tp_seq.tp_seq_set","NULL","__setitem__");
s(65,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_seq.tp_seq_size","NULL","__size__");
s(66,"DeeObject *(DEE_CALL *)(DeeObject *self, DeeObject *ob)","tp_seq.tp_seq_contains","NULL","__contains__");
s(67,"DeeObject *(DEE_CALL *)(DeeObject *self, DeeObject *lo, DeeObject *hi)","tp_seq.tp_seq_range_get","NULL","__getrange__");
s(68,"int (DEE_CALL *)(DeeObject *self, DeeObject *lo, DeeObject *hi)","tp_seq.tp_seq_range_del","NULL","__delrange__");
s(69,"int (DEE_CALL *)(DeeObject *self, DeeObject *lo, DeeObject *hi, DeeObject *v)","tp_seq.tp_seq_range_set","NULL","__setrange__");
s(70,"DeeObject *(DEE_CALL *)(DeeObject *self)","tp_seq.tp_seq_iter_self","NULL","__iterself__");
s(71,"int (DEE_CALL *)(DeeObject *self, DeeObject **elem)","tp_seq.tp_seq_iter_next","NULL","__iternext__");
s(72,"DeeObject *(DEE_CALL *)(DeeObject *self, DEE_A_IN_OBJECT(DeeStringObject) *name)","tp_attr.tp_attr_get","NULL","__getattr__");
s(73,"int (DEE_CALL *)(DeeObject *self, DEE_A_IN_OBJECT(DeeStringObject) *name)","tp_attr.tp_attr_del","NULL","__delattr__");
s(74,"int (DEE_CALL *)(DeeObject *self, DEE_A_IN_OBJECT(DeeStringObject) *name, DeeObject *v)","tp_attr.tp_attr_set","NULL","__setattr__");
s(75,"struct DeeMemberDef const *","tp_attr.tp_members","_DeeGenericFallback_MemberDef");
s(76,"struct DeeGetSetDef const *","tp_attr.tp_getsets","_DeeGenericFallback_GetSetDef");
s(77,"struct DeeMethodDef const *","tp_attr.tp_methods","_DeeGenericFallback_MethodDef");
s(78,"struct DeeMemberDef const *","tp_attr.tp_class_members","_DeeGenericFallback_MemberDef");
s(79,"struct DeeGetSetDef const *","tp_attr.tp_class_getsets","_DeeGenericFallback_GetSetDef");
s(80,"struct DeeMethodDef const *","tp_attr.tp_class_methods","_DeeGenericFallback_MethodDef");
s(85,"struct DeeTypeMarshal *","tp_marshal","NULL");

set_tyname("DeeStructuredTypeObject");
s(1000,"Dee_size_t","tp_p_constructor.tp_p_instance_size","0");
s(1001,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *args)","tp_p_constructor.tp_p_any_ctor","NULL");
s(1002,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_assign.tp_p_any_assign","NULL");
s(1003,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_cast.tp_p_str","NULL");
s(1004,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_cast.tp_p_repr","NULL");
s(1005,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, Dee_int32_t *result)","tp_p_cast.tp_p_int32","NULL");
s(1006,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, Dee_int64_t *result)","tp_p_cast.tp_p_int64","NULL");
s(1007,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, double *result)","tp_p_cast.tp_p_double","NULL");
s(1008,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *args)","tp_p_object.tp_p_call","NULL");
s(1009,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_math.tp_p_not","NULL");
s(1010,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_math.tp_p_bool","NULL");
s(1011,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_math.tp_p_inv","NULL");
s(1012,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_math.tp_p_pos","NULL");
s(1013,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_math.tp_p_neg","NULL");
s(1014,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_math.tp_p_inc","NULL");
s(1015,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_math.tp_p_incpost","NULL");
s(1016,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_math.tp_p_dec","NULL");
s(1017,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_math.tp_p_decpost","NULL");
s(1018,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_add","NULL");
s(1019,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_iadd","NULL");
s(1020,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_sub","NULL");
s(1021,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_isub","NULL");
s(1022,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_mul","NULL");
s(1023,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_imul","NULL");
s(1024,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_div","NULL");
s(1025,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_idiv","NULL");
s(1026,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_mod","NULL");
s(1027,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_imod","NULL");
s(1028,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_shl","NULL");
s(1029,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_ishl","NULL");
s(1030,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_shr","NULL");
s(1031,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_ishr","NULL");
s(1032,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_and","NULL");
s(1033,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_iand","NULL");
s(1034,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_or","NULL");
s(1035,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_ior","NULL");
s(1036,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_xor","NULL");
s(1037,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_ixor","NULL");
s(1038,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_pow","NULL");
s(1039,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_math.tp_p_ipow","NULL");
s(1040,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, Dee_hash_t start, Dee_hash_t *result)","tp_p_math.tp_p_hash","NULL");
s(1041,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_compare.tp_p_cmp_lo","NULL");
s(1042,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_compare.tp_p_cmp_le","NULL");
s(1043,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_compare.tp_p_cmp_eq","NULL");
s(1044,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_compare.tp_p_cmp_ne","NULL");
s(1045,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_compare.tp_p_cmp_gr","NULL");
s(1046,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *right)","tp_p_compare.tp_p_cmp_ge","NULL");
s(1047,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *i)","tp_p_seq.tp_p_seq_get","NULL");
s(1048,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *i)","tp_p_seq.tp_p_seq_del","NULL");
s(1049,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *i, DeeObject *v)","tp_p_seq.tp_p_seq_set","NULL");
s(1050,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_seq.tp_p_seq_size","NULL");
s(1051,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *i)","tp_p_seq.tp_p_seq_contains","NULL");
s(1052,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *lo, DeeObject *hi)","tp_p_seq.tp_p_seq_range_get","NULL");
s(1053,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *lo, DeeObject *hi)","tp_p_seq.tp_p_seq_range_del","NULL");
s(1054,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *lo, DeeObject *hi, DeeObject *v)","tp_p_seq.tp_p_seq_range_set","NULL");
s(1055,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self)","tp_p_seq.tp_p_seq_iter_self","NULL");
s(1056,"DeeObject *(DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *name)","tp_p_attr.tp_p_attr_get","NULL");
s(1057,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *name)","tp_p_attr.tp_p_attr_del","NULL");
s(1058,"int (DEE_CALL *)(struct DeeStructuredTypeObject *tp_self, void *self, DeeObject *name, DeeObject *v)","tp_p_attr.tp_p_attr_set","NULL");

print_all("\n#if DEE_CONFIG_RUNTIME_HAVE_POINTERS");
set_tyname("DeePointerTypeObject");
s(2000,"Dee_size_t","tp_ptr_elem_size","0");
s(2001,"struct DeeStructuredTypeObject *","tp_ptr_pointer_base","0");

set_tyname("DeeLValueTypeObject");
s(2100,"struct DeeStructuredTypeObject *","tp_lval_lvalue_base","NULL");
print_all("#endif /* DEE_CONFIG_RUNTIME_HAVE_POINTERS */");

set_tyname("DeeFileTypeObject");
s(3000,"int (DEE_CALL *)(struct DeeFileObject *self, void *p, Dee_size_t s, Dee_size_t *rs)","tp_io.tp_io_read","NULL","__read__");
s(3001,"int (DEE_CALL *)(struct DeeFileObject *self, void const *p, Dee_size_t s, Dee_size_t *ws)","tp_io.tp_io_write","NULL","__write__");
s(3002,"int (DEE_CALL *)(struct DeeFileObject *self, Dee_int64_t off, int whence, Dee_uint64_t *pos)","tp_io.tp_io_seek" ,"NULL","__seek__");
s(3003,"int (DEE_CALL *)(struct DeeFileObject *self)","tp_io.tp_io_flush","NULL","__flush__");
s(3004,"int (DEE_CALL *)(struct DeeFileObject *self)","tp_io.tp_io_trunc","NULL","__trunc__");
s(3005,"void (DEE_CALL *)(struct DeeFileObject *self)","tp_io.tp_io_close","NULL","__close__");

// New file operators added in v102
s(3006,"int (DEE_CALL *)(struct DeeFileObject *self, Dee_uint64_t pos, void *p, Dee_size_t s, Dee_size_t *rs)","tp_io.tp_io_readat","NULL","__readat__");
s(3007,"int (DEE_CALL *)(struct DeeFileObject *self, Dee_uint64_t pos, void const *p, Dee_size_t s, Dee_size_t *ws)","tp_io.tp_io_writeat","NULL","__writeat__");

print f_stx: "};";
print f_ids: "};";




