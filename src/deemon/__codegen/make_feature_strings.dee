const copyright = "\
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the \"Software\"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */
";

#include <file>
#include <fs>

fs.chdir(fs.path.head(__FILE__));

features = [];
for (l: file.io("../../../include/deemon/version.h","r")) {
	l = l.strip();
	if (l.startswith("#define")) {
		l = l[#"#define":].strip();
		if (l.startswith("DEE_CONFIG_")) {
			local feature_config = l;
			local feature_config_end = feature_config.find(" ");
			if (feature_config_end != -1)
				feature_config = feature_config[:feature_config_end];
			local feature_name = feature_config[#"DEE_CONFIG_":];
			local have_pos = feature_name.find("HAVE_");
			if (have_pos != -1) {
				feature_name = feature_name[:have_pos]+feature_name[have_pos+#"HAVE_":];
				local entry = pack feature_config,feature_name.lower();
				if (entry !in features) features.append(entry);
			}
		}
	}
}
out = file.io("../deemonrun.active_features.inl","w");
print out: copyright;
print out: "// This is an autogenerated file!!!";
print out: "// To edit this file, please modify "+
	repr fs.path.rel(__FILE__,fs.path.head(out.file)).replace("\\","/");
print out:;
for (f: features.sorted()) {
	print out: "#if "+f[0];
	print out: repr(f[1]+"\0");
	print out: "#endif";
}














