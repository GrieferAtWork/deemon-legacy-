#!/usr/bin/deemon
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */

#if !__has_feature(__exceptions__)
#error Your distribution of deemon seems to have exceptions disabled \
       Without them, this file won't work, so don't even bother... \
       To fix this, set 'DEE_CONFIG_LANGUAGE_HAVE_EXCEPTIONS' in <deemon/__conf.inl>
#endif

#include <error>

#define handle

function func_01(a_,b_,c_) {
#ifdef handle
	try {try {try {try {try {try {
#endif
	// Using throw in finally, we can raise multiple errors at once!
	try {
		print "#1";
		throw "a";
	} finally {
		try {
			print "#2";
			throw "b";
		} finally {
			try {
				print "#3";
				throw "c";
			} finally {
				try {
					print "#4";
					throw "d";
				} finally {
					try {
						print "#5";
						throw "e";
					} finally {
						print "#6";
						throw list("f");
					}
				}
			}
		}
	}
#ifdef handle
	} catch (a...) { try { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; } finally {
		print a;
		throw a; // Commenting this out allows all exceptions to be handled
	} }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
	} catch (a...) { print __FILE__ "("+str __LINE__+") : Caught:",repr a,"| from:",repr repr __builtin_last_traceback()[0]; }
#endif
}

func_01(10,20,30);
func_01(30,20,10);

