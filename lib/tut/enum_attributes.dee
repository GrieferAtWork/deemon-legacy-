#!/usr/bin/deemon
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */

// Not much to say here. We simply enumerate all attributes of the '_zlib' dex

#include <attrutil>

function enum_callback(ty,self,name,flags,ob_type) {
	local flag_parts = [];
	if (self.class != ty) return; // Only enumerate top level attributes (exclude operator names and such...)
	if (flags & util::attr::ENUM_ATTR_FLAG_PERMISSION_GET) flag_parts.append("GET");
	if (flags & util::attr::ENUM_ATTR_FLAG_PERMISSION_DEL) flag_parts.append("DEL");
	if (flags & util::attr::ENUM_ATTR_FLAG_PERMISSION_SET) flag_parts.append("SET");
	print ("["+",".join(flag_parts)+"]"),":",name,":",ob_type,":",self.operator . (name);
}

util::attr::enumattr(__builtin_dex("_zlib"),enum_callback);













