/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */
#pragma once
#include <__stddef.dee>
#include <__builtin_bswap.dee>

#if __API_VERSION__ < 101
#	error "API Version too old for this header"
#endif

#undef __NET_ENDIAN__
#define __NET_ENDIAN__ 4321

#pragma push_macro("net")
#pragma push_macro("ntoh16")
#pragma push_macro("ntoh32")
#pragma push_macro("ntoh64")
#undef net
#undef ntoh16
#undef ntoh32
#undef ntoh64
module net {

#if __BYTEORDER__ == __NET_ENDIAN__
	constexpr function ntoh16(__x) -> __x;
	constexpr function ntoh32(__x) -> __x;
	constexpr function ntoh64(__x) -> __x;
#else
	const ntoh16 = ::__builtin_bswap16;
	const ntoh32 = ::__builtin_bswap32;
	const ntoh64 = ::__builtin_bswap64;
#endif

}
#pragma pop_macro("net")
#pragma pop_macro("ntoh16")
#pragma pop_macro("ntoh32")
#pragma pop_macro("ntoh64")




