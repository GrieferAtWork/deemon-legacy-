/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */
#pragma once
#include <__stddef.dee>

const __builtin_avg = __builtin_object(0x0104);
const __builtin_all = __builtin_object(0x0105);
const __builtin_any = __builtin_object(0x0106);
const __builtin_sum = __builtin_object(0x0107);
const __builtin_ord = __builtin_object(0x0109);
const __builtin_range = __builtin_object(0x0117);
const __builtin_id = __builtin_object(0x0118);
const __builtin_swap = __builtin_object(0x0175);
const __builtin_seq_find = __builtin_object(0x01B2);
const __builtin_seq_rfind = __builtin_object(0x01B3);
const __builtin_seq_index = __builtin_object(0x01B4);
const __builtin_seq_rindex = __builtin_object(0x01B5);
const __builtin_seq_contains = __builtin_object(0x0189);
const __builtin_seq_count = __builtin_object(0x01B6);
const __builtin_seq_locate = __builtin_object(0x01B7);
const __builtin_seq_rlocate = __builtin_object(0x01B8);
const __builtin_seq_locate_all = __builtin_object(0x01B9);
const __builtin_seq_transform = __builtin_object(0x01BA);
const __builtin_seq_empty = __builtin_object(0x01BB);
const __builtin_seq_non_empty = __builtin_object(0x01BC);
const __builtin_seq_front = __builtin_object(0x01BD);
const __builtin_seq_back = __builtin_object(0x01BE);
const __builtin_seq_get = __builtin_object(0x01BF);
const __builtin_seq_at = __builtin_object(0x01C0);
const __builtin_seq_reversed = __builtin_object(0x01C1);
const __builtin_seq_sorted = __builtin_object(0x01C2);
const __builtin_seq_segments = __builtin_object(0x01C3);

__if_not_exists(__builtin_min) {
	const __builtin_min = __builtin_object(0x0102);
	const __builtin_max = __builtin_object(0x0103);
	const __builtin_abs = __builtin_object(0x010A);
	const __builtin_sqr = __builtin_object(0x0108);
	const __builtin_ceil = __builtin_object(0x010B);
	const __builtin_floor = __builtin_object(0x010C);
	const __builtin_round = __builtin_object(0x010D);
}
