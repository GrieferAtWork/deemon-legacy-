/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */
#pragma once
#include <__stddef.dee>

#ifndef __BYTEORDER__
#	error Missing predefined macro: '__BYTEORDER__'
#endif

#if __BYTEORDER__ == 1234
#	define __LIL_ENDIAN__ 1
#elif __BYTEORDER__ == 4321
#	define __BIG_ENDIAN__ 1
#endif

#define __swap16_m(x) (\
	(((x)&0x00ffui16)<<8)|\
	(((x)&0xff00ui16)>>8))
#define __swap32_m(x) (\
	(((x)&0x000000ffui32)<<24)|\
	(((x)&0x0000ff00ui32)<< 8)|\
	(((x)&0x00ff0000ui32)>> 8)|\
	(((x)&0xff000000ui32)>>24))
#define __swap64_m(x) (\
	(((x)&0x00000000000000ffui64)<<56)|\
	(((x)&0x000000000000ff00ui64)<<40)|\
	(((x)&0x0000000000ff0000ui64)<<24)|\
	(((x)&0x00000000ff000000ui64)<< 8)|\
	(((x)&0x000000ff00000000ui64)>> 8)|\
	(((x)&0x0000ff0000000000ui64)>>24)|\
	(((x)&0x00ff000000000000ui64)>>40)|\
	(((x)&0xff00000000000000ui64)>>56))

const __swap16 = __builtin_object(0x0177);
const __swap32 = __builtin_object(0x0178);
const __swap64 = __builtin_object(0x0179);

#if defined(__LIL_ENDIAN__)
#	define __swap_le16  /* nothing */
#	define __swap_le32  /* nothing */
#	define __swap_le64  /* nothing */
#	define __swap_be16  __swap16
#	define __swap_be32  __swap32
#	define __swap_be64  __swap64
#elif defined(__BIG_ENDIAN__)
#	define __swap_le16  __swap16
#	define __swap_le32  __swap32
#	define __swap_le64  __swap64
#	define __swap_be16  /* nothing */
#	define __swap_be32  /* nothing */
#	define __swap_be64  /* nothing */
#endif

