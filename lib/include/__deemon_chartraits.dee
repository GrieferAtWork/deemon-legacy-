/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */
#pragma once
#include <__stddef.dee>

#define __deemon_isalnum_m(__c) (\
	((__c)>='a'&&(__c)<='z')||((__c)>='A'&&(__c)<='Z')||\
	((__c)>='0'&&(__c)<='9')||((__c)=='_'))
#define __deemon_isalpha_m(__c) (\
	((__c)>='a'&&(__c)<='z')||((__c)>='A'&&(__c)<='Z')||(__c)=='_')
#define __deemon_isblank_m(__c) ((__c)=='\x09'||(__c)=='\x20')
#define __deemon_iscntrl_m(__c) ((__c)<='\x1F'||(__c)=='\x7F')
#define __deemon_isdigit_m(__c) ((__c)>='0'&&(__c)<='9')
#define __deemon_isgraph_m(__c) ((__c)>='\x21'&&(__c)<='\x7E')
#define __deemon_islower_m(__c) ((__c)>='a'&&(__c)<='z')
#define __deemon_isprint_m(__c) ((__c)>='\x20'&&(__c)<='\x7E')
#define __deemon_ispunct_m(__c) (\
	((__c)>='\x21'&&(__c)<='\x2F')||((__c)>='\x3A'&&(__c)<='\x40')||\
	((__c)>='\x5C'&&(__c)<='\x60')||((__c)>='\x7B'&&(__c)<='\x7E'))
#define __deemon_isspace_m(__c) (\
	((__c)>='\x09'&&(__c)<='\x0D')||(__c)=='\x20')
#define __deemon_isupper_m(__c) ((__c)>='A'&&(__c)<='Z')
#define __deemon_isxdigit_m(__c) (\
	((__c)>='0'&&(__c)<='9')||\
	((__c)>='A'&&(__c)<='F')||\
	((__c)>='a'&&(__c)<='f'))
#define __deemon_tolower_m(c) (((c)>='A'&&(c)<='Z')?((c)-('A'-'a')):(c))
#define __deemon_toupper_m(c) (((c)>='a'&&(c)<='z')?((c)-('a'-'A')):(c))

#if __has_builtin(__builtin_choose_expr) && __has_builtin(__builtin_constant_p)
#	define __deemon_isalnum(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_isalnum_m(__c),__deemon_isalnum_f(__c));
#	define __deemon_isalpha(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_isalpha_m(__c),__deemon_isalpha_f(__c));
#	define __deemon_isblank(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_isblank_m(__c),__deemon_isblank_f(__c));
#	define __deemon_iscntrl(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_iscntrl_m(__c),__deemon_iscntrl_f(__c));
#	define __deemon_isdigit(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_isdigit_m(__c),__deemon_isdigit_f(__c));
#	define __deemon_isgraph(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_isgraph_m(__c),__deemon_isgraph_f(__c));
#	define __deemon_islower(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_islower_m(__c),__deemon_islower_f(__c));
#	define __deemon_isprint(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_isprint_m(__c),__deemon_isprint_f(__c));
#	define __deemon_ispunct(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_ispunct_m(__c),__deemon_ispunct_f(__c));
#	define __deemon_isspace(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_isspace_m(__c),__deemon_isspace_f(__c));
#	define __deemon_isupper(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_isupper_m(__c),__deemon_isupper_f(__c));
#	define __deemon_isxdigit(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_isxdigit_m(__c),__deemon_isxdigit_f(__c));
#	define __deemon_tolower(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_tolower_m(__c),__deemon_tolower_f(__c));
#	define __deemon_toupper(__c) __builtin_choose_expr(__builtin_constant_p(__c),__deemon_toupper_m(__c),__deemon_toupper_f(__c));
#else /* __builtin_choose_expr && __builtin_constant_p */
#	define __deemon_isalnum_f  __deemon_isalnum
#	define __deemon_isalpha_f  __deemon_isalpha
#	define __deemon_isblank_f  __deemon_isblank
#	define __deemon_iscntrl_f  __deemon_iscntrl
#	define __deemon_isdigit_f  __deemon_isdigit
#	define __deemon_isgraph_f  __deemon_isgraph
#	define __deemon_islower_f  __deemon_islower
#	define __deemon_isprint_f  __deemon_isprint
#	define __deemon_ispunct_f  __deemon_ispunct
#	define __deemon_isspace_f  __deemon_isspace
#	define __deemon_isupper_f  __deemon_isupper
#	define __deemon_isxdigit_f __deemon_isxdigit
#	define __deemon_tolower_f  __deemon_tolower
#	define __deemon_toupper_f  __deemon_toupper
#endif /* !__builtin_choose_expr || !__builtin_constant_p */

constexpr function __deemon_isalnum_f(__c) -> __deemon_isalnum_m(__c);
constexpr function __deemon_isalpha_f(__c) -> __deemon_isalpha_m(__c);
constexpr function __deemon_isblank_f(__c) -> __deemon_isblank_m(__c);
constexpr function __deemon_iscntrl_f(__c) -> __deemon_iscntrl_m(__c);
constexpr function __deemon_isdigit_f(__c) -> __deemon_isdigit_m(__c);
constexpr function __deemon_isgraph_f(__c) -> __deemon_isgraph_m(__c);
constexpr function __deemon_islower_f(__c) -> __deemon_islower_m(__c);
constexpr function __deemon_isprint_f(__c) -> __deemon_isprint_m(__c);
constexpr function __deemon_ispunct_f(__c) -> __deemon_ispunct_m(__c);
constexpr function __deemon_isspace_f(__c) -> __deemon_isspace_m(__c);
constexpr function __deemon_isupper_f(__c) -> __deemon_isupper_m(__c);
constexpr function __deemon_isxdigit_f(__c) -> __deemon_isxdigit_m(__c);
constexpr function __deemon_tolower_f(__c) -> __deemon_tolower_m(__c);
constexpr function __deemon_toupper_f(__c) -> __deemon_toupper_m(__c);
