#!/usr/bin/deemon -O3 -Cno-c-GEN_UNREACHABLE
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */

// v102 received an overhaul of its peephole optimizer
//      Many new situations are now being optimized,
//      with this test attempting to trigger as many
//      as possible.

#define assert_same_code(...) __assert_same_code{__VA_ARGS__}
#define __assert_same_code{a,b}\
({\
	__stack local _a = (a).code;\
	__stack local _b = (b).code;\
	assert _a.code == _b.code :\
		"Non-equal code:\n"\
		"\ta: " #a "\n"\
		"\tb: " #b "\n"+\
		_a.asmrepr()+"\n"+\
		_b.asmrepr();\
})

#pragma warning(disable: 679)


// NOTE: The 'print' in some of these is
//       required to prevent other optimizations
assert_same_code([]{},[]{});
assert_same_code(
	[]: result { result = 42; },
	[] { return 42; }
);
assert_same_code(
	[] { print; volatile __stack local result = none; return result; },
	[] { print; return; }
);
assert_same_code(
	[](x) { if (!!x) print; },
	[](x) { if (x) print; }
);



















