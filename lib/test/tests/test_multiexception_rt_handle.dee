#!/usr/bin/deemon
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */

#include <error>
#include <util>

(({

	// Make sure that multi-exception silently dropped by the runtime
	// are handled correctly.

	class my_class: list {
		find(elem) {
			try {
				throw "Inner Error";
			} finally {
				throw Error.RuntimeError.NotImplemented();
			}
		}
	};

	x = my_class();
	
	// __builtin_find will see the NotImplemented error and handle it.
	// NOTE: The standard doesn't specify what happens to additional
	//       exceptions when exceptions are handled by the runtime.
	//       >> Thus, depending on deemon's implementation, this
	//          test has two valid outcomes.
	//          #1: __builtin_find will handle all errors after
	//              seing that the one on top is what it was looking for,
	//              then move on to use the iterators from 'list'.
	//          #2: Only the NotImplemented eror is handled and after
	//              handling it the function fails, thus proceeding to signal
	//              the previous error, that is the string constant "Inner Error"
	// NOTE: For a more detailed explanation, see the 'Handle vs. HandleOne'
	//       paragraph in Griefer@Work's core implementation, file: <deemon/error.h>
	try {
		// CASE A
		assert util::seq::find(x,42) == -1;
	} catch (string a) {
		// CASE B
		assert a == "Inner Error";
	}

}));






