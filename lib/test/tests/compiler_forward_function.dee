#!/usr/bin/deemon
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */


// Forward declared function were broken in v101:1.
// This test ensures that they will remain working from now on!

(({

	// forward-declare a function 'foo'
	// NOTE: Declare with 'volatile' to prevent compiler optimizations
	local volatile function foo;

	// Make sure 'foo' is a function
	assert foo is type function;

	// Make sure calling forward-functions is a no-op
	// NOTE: This isn't something you should do, though.
	//       I might even add a warning for when I notice you doing this...
	assert foo() is none;

	assert ({
		__stack local failed = false;
		try {
			foo(42);
		} catch (...) {
			failed = true;
		}
		failed;
	}) : "Calling a forward-declared function should require an empty argument list";

	local function bar(y) {
		// Use that function before it's implemented
		return foo(y);
	}

	// Implement 'foo'
	local function foo(x) {
		return x*x;
	}

	assert bar(4) == 16;

}));





