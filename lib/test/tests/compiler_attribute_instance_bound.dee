#!/usr/bin/deemon
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */

// Test the [[instance_bound]] attribute newly added in v102


(({

	local move_assign_count = 0;
	local copy_assign_count = 0;
	class test_class {
		operator move = (right) { ++move_assign_count; }
		operator copy = (right) { ++copy_assign_count; }
	};
	
	assert move_assign_count == 0;
	assert copy_assign_count == 0;
	
	// Sanity test (storing to regular variables)
	{
		local inst;
		inst = test_class();
		inst = test_class(); // This should be a store operation
		assert move_assign_count == 0;
		assert copy_assign_count == 0;
	}

	// Instance bound default value (copy)
	{
		[[instance_bound]] local inst;
		inst = test_class();
		inst = test_class(); // This should be a copy-assign
		assert move_assign_count == 0;
		assert copy_assign_count == 1;
		copy_assign_count := 0;
	}

	// Instance bound copy-assign
	{
		[[instance_bound("copy")]] local inst;
		inst = test_class();
		inst = test_class(); // This should be a copy-assign
		assert move_assign_count == 0;
		assert copy_assign_count == 1;
		copy_assign_count := 0;
	}

	// Instance bound move-assign
	{
		[[instance_bound("move")]] local inst;
		inst = test_class();
		inst = test_class(); // This should be a move-assign
		assert move_assign_count == 1;
		assert copy_assign_count == 0;
		move_assign_count := 1;
	}

}));












