#!/urs/bin/deemon
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
 */

// A simple example of recording audio from your computer's mic,
// and then output the highest/lowest volume that was recorded.
// (Try stroking or blowing your mic while running this script)

// WARNING: Only works under windows right now

#include <micapi>

m1 = micapi::mic();
m1.begin_record();
while (1) {
	const avg_over = 64;
	int32_t lo = __INT16_MAX__;
	int32_t hi = 0;
	for (local i = 0; i < avg_over; ++i) {
		local temp = m1.reado(int16_t);
		if (temp < lo) lo = temp;
		if (temp > hi) hi = temp;
	}
	const trim = 1000;
	print (" "*(lo/trim))+("*"*(1+((hi-lo)/trim)));
}
m1.end_record();




