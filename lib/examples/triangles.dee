#!/usr/bin/deemon
/* Copyright (c) 2016 - deemon by Griefer@Work                                    *
 *                                                                                *
 * Permission is hereby granted, free of charge, to any person obtaining a copy   *
 * of this software and associated documentation files (the "Software"), to deal  *
 * in the Software without restriction, including without limitation the rights   *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      *
 * copies of the Software, and to permit persons to whom the Software is          *
 * furnished to do so, subject to the following conditions:                       *
 *                                                                                *
 * The above copyright notice and this permission notice shall be included in all *
 * copies or substantial portions of the Software.                                *
 *                                                                                *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  *
 * SOFTWARE.                                                                      *
*/

#include <gfx>
#include <file>
#include <thread>
#include <random>

import gfx.*;

local stop = <false>;

function border_triangle(dst,x1,y1,x2,y2,x3,y3,args1,args2) {
	dst.triangle(x1,y1,x2,y2,x3,y3,args2...);
	dst.line(x1,y1,x2,y2,args1...);
	dst.line(x2,y2,x3,y3,args1...);
	dst.line(x3,y3,x1,y1,args1...);
}

local wait_thread = thread([]{
	print "Press [RETURN] to stop";
	file.io.stdin.readline();
	stop.set(true);
});
wait_thread.start();

wnd = window(100,100,800,600,"MyWindow");
//wnd.surface.fill(0,0,-1,-1,pixel.green);

local color = [0,0,0];

while (!stop.get()) {
	const step = 10;
	if ((color[2] += step) >= 256) {
		color[2] = 0;
		if ((color[1] += step) >= 256) {
			color[1] = 0;
			if ((color[0] += step) >= 256) {
				color[0] = 0;
			}
		}
	}
	local sx = wnd.surface.sizex;
	local sy = wnd.surface.sizey;
	border_triangle(wnd.surface,
		random()(unsigned) % sx,random()(unsigned) % sy,
		random()(unsigned) % sx,random()(unsigned) % sy,
		random()(unsigned) % sx,random()(unsigned) % sy,
		//10,10,150,31,89,200,
		pack(pixel("#00FF00")),
		pack(pixel(color[0],color[1],color[2],120)),
	);
	wnd.update();
}

